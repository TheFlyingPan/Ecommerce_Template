security:
    encoders:
        App\Entity\UserTable: 
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        api:
            pattern: ^/apip/
            stateless: true
            anonymous: true
            provider: users_in_memory
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            json_login:
                check_path: /authentication_token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                    
    access_control:
        # - { path: ^/apip, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
        # - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
